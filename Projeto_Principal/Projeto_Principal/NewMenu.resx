<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>